{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\jhuan\\\\Documents\\\\AI4Good\\\\Project\\\\hAIven\\\\haiven-app\\\\app\\\\screens\\\\JournalScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport colors from \"../config/colors\";\nimport { Footer } from \"../components/Footer\";\nimport { Ionicons } from \"@expo/vector-icons\";\nexport var Journal = function (_React$Component) {\n  _inherits(Journal, _React$Component);\n\n  var _super = _createSuper(Journal);\n\n  function Journal() {\n    _classCallCheck(this, Journal);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Journal, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.subheading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }\n      }, \"Journal\"), React.createElement(TextInput, {\n        style: styles.entry,\n        multiline: true,\n        placeholder: \"How was your day?\",\n        placeholderTextColor: \"#000\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Journal;\n}(React.Component);\nexport var Mood = function (_React$Component2) {\n  _inherits(Mood, _React$Component2);\n\n  var _super2 = _createSuper(Mood);\n\n  function Mood() {\n    _classCallCheck(this, Mood);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(Mood, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: {\n          alignItems: \"center\",\n          marginRight: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.subheading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }, this.props.subheading), React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: [styles.circle, {\n          backgroundColor: this.props.bgcolor\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      }, this.props.mood)), React.createElement(View, {\n        style: {\n          fontStyle: \"italic\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      }, this.props.time), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }, this.props.length)));\n    }\n  }]);\n\n  return Mood;\n}(React.Component);\n\nfunction JournalScreen(_ref) {\n  var route = _ref.route;\n  var date = route.params.date;\n\n  var _React$useState = React.useState(\"java\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      selectedValue = _React$useState2[0],\n      setSelectedValue = _React$useState2[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.dateHeading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, date)), React.createElement(View, {\n    style: [styles.container, styles.layout],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, React.createElement(Picker, {\n    selectedValue: selectedValue,\n    style: {\n      height: 50,\n      width: 150\n    },\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      return setSelectedValue(itemValue);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"Java\",\n    value: \"java\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"JavaScript\",\n    value: \"js\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }))), React.createElement(Mood, {\n    subheading: \"My Mood\",\n    bgcolor: colors.sad,\n    mood: \"Sad\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  })), React.createElement(Mood, {\n    subheading: \"Audio (1)\",\n    bgcolor: colors.angry,\n    mood: \"Angry\",\n    time: \"9:48PM\",\n    length: \"3 minutes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, React.createElement(Ionicons, {\n    style: styles.notification,\n    name: \"ios-chatbubbles\",\n    size: 40,\n    color: \"#8FBC8F\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), React.createElement(Journal, {\n    style: {\n      alignSelf: \"stretch\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  })), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    flex: 1,\n    justifyContent: \"space-between\",\n    backgroundColor: colors.background\n  },\n  mood: {\n    flexDirection: \"row\"\n  },\n  notification: {\n    position: \"absolute\",\n    alignSelf: \"flex-end\",\n    padding: 10,\n    zIndex: 1\n  },\n  dateHeading: {\n    backgroundColor: colors.primary,\n    borderRadius: 10,\n    color: \"#fff\",\n    fontWeight: \"bold\",\n    padding: 10,\n    margin: 15\n  },\n  entry: {\n    backgroundColor: colors.secondary,\n    minHeight: Dimensions.get(\"window\").height * 0.3,\n    borderRadius: 10,\n    padding: 10\n  },\n  subheading: {\n    color: colors.primary,\n    fontWeight: \"bold\",\n    margin: 10\n  },\n  layout: {\n    flexWrap: \"wrap\",\n    flexDirection: \"row\",\n    alignItems: \"baseline\",\n    alignSelf: \"flex-start\"\n  },\n  circle: {\n    borderRadius: Math.round(Dimensions.get(\"window\").width + Dimensions.get(\"window\").height) / 2,\n    width: Dimensions.get(\"window\").width * 0.08,\n    height: Dimensions.get(\"window\").width * 0.08,\n    margin: 5\n  }\n});\nexport default JournalScreen;","map":{"version":3,"sources":["C:/Users/jhuan/Documents/AI4Good/Project/hAIven/haiven-app/app/screens/JournalScreen.js"],"names":["React","colors","Footer","Ionicons","Journal","styles","subheading","entry","Component","Mood","alignItems","marginRight","props","flexDirection","circle","backgroundColor","bgcolor","mood","fontStyle","time","length","JournalScreen","route","date","params","useState","selectedValue","setSelectedValue","container","dateHeading","layout","height","width","itemValue","itemIndex","sad","angry","notification","alignSelf","StyleSheet","create","padding","flex","justifyContent","background","position","zIndex","primary","borderRadius","color","fontWeight","margin","secondary","minHeight","Dimensions","get","flexWrap","Math","round"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  TextInput,\r\n  Text,\r\n  Dimensions,\r\n  Picker,\r\n} from \"react-native\";\r\nimport colors from \"../config/colors\";\r\nimport { Footer } from \"../components/Footer\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\n\r\nexport class Journal extends React.Component {\r\n  render() {\r\n    return (\r\n      <View>\r\n        <Text style={styles.subheading}>Journal</Text>\r\n        <TextInput\r\n          style={styles.entry}\r\n          multiline\r\n          placeholder=\"How was your day?\"\r\n          placeholderTextColor=\"#000\"\r\n          // Implement this when we have a database connected.\r\n          // When text is changed we can save to database.\r\n          // onChangeText={(text) => someFunction(text)}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport class Mood extends React.Component {\r\n  render() {\r\n    return (\r\n      <View style={{ alignItems: \"center\", marginRight: 50 }}>\r\n        <Text style={styles.subheading}>{this.props.subheading}</Text>\r\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n          <View\r\n            style={[styles.circle, { backgroundColor: this.props.bgcolor }]}\r\n          ></View>\r\n          <Text>{this.props.mood}</Text>\r\n        </View>\r\n        <View style={{ fontStyle: \"italic\" }}>\r\n          <Text>{this.props.time}</Text>\r\n          <Text>{this.props.length}</Text>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nfunction JournalScreen({ route }) {\r\n  const { date } = route.params;\r\n  const [selectedValue, setSelectedValue] = React.useState(\"java\");\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* <View>\r\n        <View style={{ flexDirection: \"row\", justifyContent: \"space-around\" }}>\r\n          <FontAwesome name=\"chevron-left\" size={24} color={colors.primary} />\r\n          <FontAwesome name=\"chevron-right\" size={24} color={colors.primary} />\r\n        </View>\r\n      </View> */}\r\n      <View>\r\n        <Text style={styles.dateHeading}>{date}</Text>\r\n      </View>\r\n      <View style={[styles.container, styles.layout]}>\r\n        <View>\r\n          <View style={styles.container}>\r\n            <Picker\r\n              selectedValue={selectedValue}\r\n              style={{ height: 50, width: 150 }}\r\n              onValueChange={(itemValue, itemIndex) =>\r\n                setSelectedValue(itemValue)\r\n              }\r\n            >\r\n              <Picker.Item label=\"Java\" value=\"java\" />\r\n              <Picker.Item label=\"JavaScript\" value=\"js\" />\r\n            </Picker>\r\n          </View>\r\n\r\n          <Mood subheading=\"My Mood\" bgcolor={colors.sad} mood=\"Sad\" />\r\n        </View>\r\n        <Mood\r\n          subheading=\"Audio (1)\"\r\n          bgcolor={colors.angry}\r\n          mood=\"Angry\"\r\n          time=\"9:48PM\"\r\n          length=\"3 minutes\"\r\n        />\r\n      </View>\r\n      <View>\r\n        <Ionicons\r\n          style={styles.notification}\r\n          name=\"ios-chatbubbles\"\r\n          size={40}\r\n          color=\"#8FBC8F\"\r\n        />\r\n        <Journal style={{ alignSelf: \"stretch\" }} />\r\n      </View>\r\n      <Footer />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: 20,\r\n    flex: 1,\r\n    justifyContent: \"space-between\",\r\n    backgroundColor: colors.background,\r\n  },\r\n  mood: {\r\n    flexDirection: \"row\",\r\n  },\r\n  notification: {\r\n    position: \"absolute\",\r\n    alignSelf: \"flex-end\",\r\n    padding: 10,\r\n    zIndex: 1,\r\n  },\r\n  dateHeading: {\r\n    backgroundColor: colors.primary,\r\n    borderRadius: 10,\r\n    color: \"#fff\",\r\n    fontWeight: \"bold\",\r\n    padding: 10,\r\n    margin: 15,\r\n  },\r\n  entry: {\r\n    backgroundColor: colors.secondary,\r\n    minHeight: Dimensions.get(\"window\").height * 0.3,\r\n    borderRadius: 10,\r\n    padding: 10,\r\n  },\r\n  subheading: {\r\n    color: colors.primary,\r\n    fontWeight: \"bold\",\r\n    margin: 10,\r\n  },\r\n  layout: {\r\n    flexWrap: \"wrap\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"baseline\",\r\n    alignSelf: \"flex-start\",\r\n  },\r\n  circle: {\r\n    borderRadius:\r\n      Math.round(\r\n        Dimensions.get(\"window\").width + Dimensions.get(\"window\").height\r\n      ) / 2,\r\n    width: Dimensions.get(\"window\").width * 0.08,\r\n    height: Dimensions.get(\"window\").width * 0.08,\r\n    margin: 5,\r\n  },\r\n});\r\n\r\nexport default JournalScreen;\r\n"]},"metadata":{},"sourceType":"module"}