{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\jhuan\\\\Documents\\\\AI4Good\\\\Project\\\\hAIven\\\\haiven-app\\\\app\\\\screens\\\\CalculatorScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Row from \"../components/Row\";\nimport Button from \"../components/Button\";\nimport calculator, { initialState } from \"../util/calculator\";\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#202020\",\n    justifyContent: \"flex-end\"\n  },\n  value: {\n    color: \"#fff\",\n    fontSize: 40,\n    textAlign: \"right\",\n    marginRight: 20,\n    marginBottom: 10\n  }\n});\n\nvar CalculatorScreen = function (_React$Component) {\n  _inherits(CalculatorScreen, _React$Component);\n\n  var _super = _createSuper(CalculatorScreen);\n\n  function CalculatorScreen() {\n    var _this;\n\n    _classCallCheck(this, CalculatorScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = initialState;\n    _this.pin = new Array();\n\n    _this.handleCalculation = function (type, value) {\n      _this.setState(function (state) {\n        return calculator(type, value, state);\n      });\n    };\n\n    _this.handlePin = function (type, value) {\n      if (!value) {\n        _this.state.pin.push(type);\n      } else {\n        _this.state.pin.push(type);\n\n        _this.state.pin.push(value);\n      }\n    };\n\n    _this.handleTap = function (type, value) {\n      _this.handleCalculation(type, value);\n\n      _this.handlePin(type, value);\n    };\n\n    return _this;\n  }\n\n  _createClass(CalculatorScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 7\n        }\n      }, React.createElement(StatusBar, {\n        barStyle: \"light-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }\n      }, this.state.pin)), React.createElement(SafeAreaView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      }, parseFloat(this.state.currentValue).toLocaleString()), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }\n      }, React.createElement(Button, {\n        text: \"C\",\n        theme: \"secondary\",\n        onPress: function onPress() {\n          return _this2.handleTap(\"clear\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }\n      }), React.createElement(Button, {\n        text: \"+/-\",\n        theme: \"secondary\",\n        onPress: function onPress() {\n          return _this2.handleTap(\"posneg\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }), React.createElement(Button, {\n        text: \"%\",\n        theme: \"secondary\",\n        onPress: function onPress() {\n          return _this2.handleTap(\"percentage\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }), React.createElement(Button, {\n        text: \"/\",\n        theme: \"accent\",\n        onPress: function onPress() {\n          return _this2.handleTap(\"operator\", \"/\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }\n      }, React.createElement(Button, {\n        text: \"7\",\n        onPress: function onPress() {\n          return _this2.handleTap(\"number\", 7);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      }), React.createElement(Button, {\n        text: \"8\",\n        onPress: function onPress() {\n          return _this2.handleTap(\"number\", 8);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }), React.createElement(Button, {\n        text: \"9\",\n        onPress: function onPress() {\n          return _this2.handleTap(\"number\", 9);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }\n      }), React.createElement(Button, {\n        text: \"x\",\n        theme: \"accent\",\n        onPress: function onPress() {\n          return _this2.handleTap(\"operator\", \"*\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }\n      }, React.createElement(Button, {\n        text: \"4\",\n        onPress: function onPress() {\n          return _this2.handleTap(\"number\", 4);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }\n      }), React.createElement(Button, {\n        text: \"5\",\n        onPress: function onPress() {\n          return _this2.handleTap(\"number\", 5);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }\n      }), React.createElement(Button, {\n        text: \"6\",\n        onPress: function onPress() {\n          return _this2.handleTap(\"number\", 6);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }\n      }), React.createElement(Button, {\n        text: \"-\",\n        theme: \"accent\",\n        onPress: function onPress() {\n          return _this2.handleTap(\"operator\", \"-\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }\n      }, React.createElement(Button, {\n        text: \"1\",\n        onPress: function onPress() {\n          return _this2.handleTap(\"number\", 1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }\n      }), React.createElement(Button, {\n        text: \"2\",\n        onPress: function onPress() {\n          return _this2.handleTap(\"number\", 2);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }\n      }), React.createElement(Button, {\n        text: \"3\",\n        onPress: function onPress() {\n          return _this2.handleTap(\"number\", 3);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }\n      }), React.createElement(Button, {\n        text: \"+\",\n        theme: \"accent\",\n        onPress: function onPress() {\n          return _this2.handleTap(\"operator\", \"+\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }\n      }, React.createElement(Button, {\n        text: \"0\",\n        size: \"double\",\n        onPress: function onPress() {\n          return _this2.handleTap(\"number\", 0);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }\n      }), React.createElement(Button, {\n        text: \".\",\n        onPress: function onPress() {\n          return _this2.handleTap(\"number\", \".\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }\n      }), React.createElement(Button, {\n        text: \"=\",\n        theme: \"accent\",\n        onPress: function onPress() {\n          return _this2.handleTap(\"equal\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return CalculatorScreen;\n}(React.Component);\n\nexport { CalculatorScreen as default };","map":{"version":3,"sources":["C:/Users/jhuan/Documents/AI4Good/Project/hAIven/haiven-app/app/screens/CalculatorScreen.js"],"names":["React","Row","Button","calculator","initialState","styles","StyleSheet","create","container","flex","backgroundColor","justifyContent","value","color","fontSize","textAlign","marginRight","marginBottom","CalculatorScreen","state","pin","Array","handleCalculation","type","setState","handlePin","push","handleTap","parseFloat","currentValue","toLocaleString","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { StyleSheet, Text, View, StatusBar, SafeAreaView } from \"react-native\";\r\n\r\nimport Row from \"../components/Row\";\r\nimport Button from \"../components/Button\";\r\nimport calculator, { initialState } from \"../util/calculator\";\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#202020\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  value: {\r\n    color: \"#fff\",\r\n    fontSize: 40,\r\n    textAlign: \"right\",\r\n    marginRight: 20,\r\n    marginBottom: 10,\r\n  },\r\n});\r\n\r\nexport default class CalculatorScreen extends React.Component {\r\n  state = initialState;\r\n  pin = new Array();\r\n\r\n  handleCalculation = (type, value) => {\r\n    this.setState((state) => calculator(type, value, state));\r\n  };\r\n\r\n  handlePin = (type, value) => {\r\n    if (!value) {\r\n      this.state.pin.push(type);\r\n    } else {\r\n      this.state.pin.push(type);\r\n      this.state.pin.push(value);\r\n    }\r\n  };\r\n\r\n  handleTap = (type, value) => {\r\n    this.handleCalculation(type, value);\r\n    this.handlePin(type, value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <StatusBar barStyle=\"light-content\" />\r\n        <View>\r\n          <Text>{this.state.pin}</Text>\r\n        </View>\r\n        <SafeAreaView>\r\n          <Text style={styles.value}>\r\n            {parseFloat(this.state.currentValue).toLocaleString()}\r\n          </Text>\r\n          <Row>\r\n            <Button\r\n              text=\"C\"\r\n              theme=\"secondary\"\r\n              onPress={() => this.handleTap(\"clear\")}\r\n            />\r\n            <Button\r\n              text=\"+/-\"\r\n              theme=\"secondary\"\r\n              onPress={() => this.handleTap(\"posneg\")}\r\n            />\r\n            <Button\r\n              text=\"%\"\r\n              theme=\"secondary\"\r\n              onPress={() => this.handleTap(\"percentage\")}\r\n            />\r\n            <Button\r\n              text=\"/\"\r\n              theme=\"accent\"\r\n              onPress={() => this.handleTap(\"operator\", \"/\")}\r\n            />\r\n          </Row>\r\n\r\n          <Row>\r\n            <Button text=\"7\" onPress={() => this.handleTap(\"number\", 7)} />\r\n            <Button text=\"8\" onPress={() => this.handleTap(\"number\", 8)} />\r\n            <Button text=\"9\" onPress={() => this.handleTap(\"number\", 9)} />\r\n            <Button\r\n              text=\"x\"\r\n              theme=\"accent\"\r\n              onPress={() => this.handleTap(\"operator\", \"*\")}\r\n            />\r\n          </Row>\r\n\r\n          <Row>\r\n            <Button text=\"4\" onPress={() => this.handleTap(\"number\", 4)} />\r\n            <Button text=\"5\" onPress={() => this.handleTap(\"number\", 5)} />\r\n            <Button text=\"6\" onPress={() => this.handleTap(\"number\", 6)} />\r\n            <Button\r\n              text=\"-\"\r\n              theme=\"accent\"\r\n              onPress={() => this.handleTap(\"operator\", \"-\")}\r\n            />\r\n          </Row>\r\n\r\n          <Row>\r\n            <Button text=\"1\" onPress={() => this.handleTap(\"number\", 1)} />\r\n            <Button text=\"2\" onPress={() => this.handleTap(\"number\", 2)} />\r\n            <Button text=\"3\" onPress={() => this.handleTap(\"number\", 3)} />\r\n            <Button\r\n              text=\"+\"\r\n              theme=\"accent\"\r\n              onPress={() => this.handleTap(\"operator\", \"+\")}\r\n            />\r\n          </Row>\r\n\r\n          <Row>\r\n            <Button\r\n              text=\"0\"\r\n              size=\"double\"\r\n              onPress={() => this.handleTap(\"number\", 0)}\r\n            />\r\n            <Button text=\".\" onPress={() => this.handleTap(\"number\", \".\")} />\r\n            <Button\r\n              text=\"=\"\r\n              theme=\"accent\"\r\n              onPress={() => this.handleTap(\"equal\")}\r\n            />\r\n          </Row>\r\n        </SafeAreaView>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}