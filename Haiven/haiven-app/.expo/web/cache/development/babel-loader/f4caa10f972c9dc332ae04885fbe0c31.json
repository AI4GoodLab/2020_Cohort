{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\jhuan\\\\Documents\\\\AI4Good\\\\Project\\\\hAIven\\\\haiven-app\\\\app\\\\screens\\\\CalendarScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Calendar } from \"react-native-calendars\";\nimport colors from \"../config/colors\";\nimport { Footer } from \"../components/Footer\";\nimport { FontAwesome5 } from \"@expo/vector-icons\";\nexport var Insight = function (_React$Component) {\n  _inherits(Insight, _React$Component);\n\n  var _super = _createSuper(Insight);\n\n  function Insight() {\n    _classCallCheck(this, Insight);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Insight, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.insight,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          justifyContent: \"space-between\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: colors.primary,\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }\n      }, this.props.insight), React.createElement(FontAwesome5, {\n        name: this.props.icon,\n        size: 24,\n        color: \"black\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }\n      })), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }\n      }, this.props.text));\n    }\n  }]);\n\n  return Insight;\n}(React.Component);\n\nfunction CalendarScreen(_ref) {\n  var navigation = _ref.navigation;\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, React.createElement(Calendar, {\n    onDayPress: function onDayPress(day) {\n      var dateSelected = new Date(day[\"year\"], day[\"month\"] - 1, day[\"day\"]);\n      navigation.navigate(\"Journal\", {\n        date: dateSelected.toDateString()\n      });\n    },\n    theme: {\n      textSectionTitleColor: colors.primary,\n      monthTextColor: colors.primary,\n      indicatorColor: \"blue\",\n      selectedDotColor: colors.secondary,\n      selectedDayTextColor: colors.secondary,\n      todayTextColor: colors.primary,\n      arrowColor: colors.primary,\n      textMonthFontWeight: \"bold\",\n      textMonthFontSize: 30\n    },\n    m: true,\n    markedDates: {\n      \"2020-07-19\": {\n        disabled: true,\n        startingDay: true,\n        color: colors.happy,\n        endingDay: true\n      },\n      \"2020-07-20\": {\n        disabled: true,\n        startingDay: true,\n        color: colors.happy,\n        endingDay: true\n      },\n      \"2020-07-21\": {\n        disabled: true,\n        startingDay: true,\n        color: colors.happy,\n        endingDay: true\n      },\n      \"2020-07-22\": {\n        disabled: true,\n        startingDay: true,\n        color: colors.sad,\n        endingDay: true\n      },\n      \"2020-07-23\": {\n        disabled: true,\n        startingDay: true,\n        color: colors.angry,\n        endingDay: true\n      },\n      \"2020-07-24\": {\n        disabled: true,\n        startingDay: true,\n        color: colors.angry,\n        endingDay: true\n      },\n      \"2020-07-25\": {\n        disabled: true,\n        startingDay: true,\n        color: colors.sad,\n        endingDay: true\n      },\n      \"2020-07-26\": {\n        disabled: true,\n        startingDay: true,\n        color: colors.happy,\n        endingDay: true\n      },\n      \"2020-07-27\": {\n        disabled: true,\n        startingDay: true,\n        color: colors.sad,\n        endingDay: true\n      }\n    },\n    markingType: \"period\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: {\n      borderBottomColor: colors.primary,\n      borderBottomWidth: 5,\n      width: \"50%\",\n      marginTop: 10,\n      alignSelf: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: {\n      padding: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.subheading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, \"Insights\"), React.createElement(Insight, {\n    insight: \"Happiness\",\n    icon: \"smile-beam\",\n    text: \"This month you were on average happier than last month.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }), React.createElement(Insight, {\n    insight: \"Anger\",\n    icon: \"sad-tear\",\n    text: \"We've noticd that there is usally anger detected Saturday nights.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }))), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"space-between\",\n    backgroundColor: colors.background\n  },\n  insight: {\n    margin: 10,\n    backgroundColor: colors.secondary,\n    borderRadius: 10,\n    padding: 10\n  },\n  subheading: {\n    color: colors.primary,\n    fontWeight: \"bold\",\n    fontSize: 25\n  }\n});\nexport default CalendarScreen;","map":{"version":3,"sources":["C:/Users/jhuan/Documents/AI4Good/Project/hAIven/haiven-app/app/screens/CalendarScreen.js"],"names":["React","Calendar","colors","Footer","FontAwesome5","Insight","styles","insight","flexDirection","justifyContent","color","primary","fontWeight","props","icon","text","Component","CalendarScreen","navigation","container","day","dateSelected","Date","navigate","date","toDateString","textSectionTitleColor","monthTextColor","indicatorColor","selectedDotColor","secondary","selectedDayTextColor","todayTextColor","arrowColor","textMonthFontWeight","textMonthFontSize","disabled","startingDay","happy","endingDay","sad","angry","borderBottomColor","borderBottomWidth","width","marginTop","alignSelf","padding","subheading","StyleSheet","create","flex","backgroundColor","background","margin","borderRadius","fontSize"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { View, StyleSheet, SafeAreaView, Text, ScrollView } from \"react-native\";\r\nimport { Calendar } from \"react-native-calendars\";\r\nimport colors from \"../config/colors\";\r\nimport { Footer } from \"../components/Footer\";\r\nimport { FontAwesome5 } from \"@expo/vector-icons\";\r\n\r\nexport class Insight extends React.Component {\r\n  render() {\r\n    return (\r\n      <View style={styles.insight}>\r\n        <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\r\n          <Text style={{ color: colors.primary, fontWeight: \"bold\" }}>\r\n            {this.props.insight}\r\n          </Text>\r\n          <FontAwesome5 name={this.props.icon} size={24} color=\"black\" />\r\n        </View>\r\n        <Text>{this.props.text}</Text>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nfunction CalendarScreen({ navigation }) {\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <ScrollView>\r\n        <View>\r\n          <Calendar\r\n            onDayPress={(day) => {\r\n              var dateSelected = new Date(\r\n                day[\"year\"],\r\n                day[\"month\"] - 1,\r\n                day[\"day\"]\r\n              );\r\n              navigation.navigate(\"Journal\", {\r\n                date: dateSelected.toDateString(),\r\n              });\r\n            }}\r\n            theme={{\r\n              textSectionTitleColor: colors.primary,\r\n              monthTextColor: colors.primary,\r\n              indicatorColor: \"blue\",\r\n              selectedDotColor: colors.secondary,\r\n              selectedDayTextColor: colors.secondary,\r\n              todayTextColor: colors.primary,\r\n              arrowColor: colors.primary,\r\n              textMonthFontWeight: \"bold\",\r\n              textMonthFontSize: 30,\r\n            }}\r\n            m // Collection of dates that have to be colored in a special way. Default = {}\r\n            markedDates={{\r\n              \"2020-07-19\": {\r\n                disabled: true,\r\n                startingDay: true,\r\n                color: colors.happy,\r\n                endingDay: true,\r\n              },\r\n              \"2020-07-20\": {\r\n                disabled: true,\r\n                startingDay: true,\r\n                color: colors.happy,\r\n                endingDay: true,\r\n              },\r\n              \"2020-07-21\": {\r\n                disabled: true,\r\n                startingDay: true,\r\n                color: colors.happy,\r\n                endingDay: true,\r\n              },\r\n              \"2020-07-22\": {\r\n                disabled: true,\r\n                startingDay: true,\r\n                color: colors.sad,\r\n                endingDay: true,\r\n              },\r\n              \"2020-07-23\": {\r\n                disabled: true,\r\n                startingDay: true,\r\n                color: colors.angry,\r\n                endingDay: true,\r\n              },\r\n              \"2020-07-24\": {\r\n                disabled: true,\r\n                startingDay: true,\r\n                color: colors.angry,\r\n                endingDay: true,\r\n              },\r\n              \"2020-07-25\": {\r\n                disabled: true,\r\n                startingDay: true,\r\n                color: colors.sad,\r\n                endingDay: true,\r\n              },\r\n              \"2020-07-26\": {\r\n                disabled: true,\r\n                startingDay: true,\r\n                color: colors.happy,\r\n                endingDay: true,\r\n              },\r\n              \"2020-07-27\": {\r\n                disabled: true,\r\n                startingDay: true,\r\n                color: colors.sad,\r\n                endingDay: true,\r\n              },\r\n            }}\r\n            // Date marking style [simple/period/multi-dot/custom]. Default = 'simple'\r\n            markingType={\"period\"}\r\n          />\r\n        </View>\r\n        <View\r\n          style={{\r\n            borderBottomColor: colors.primary,\r\n            borderBottomWidth: 5,\r\n            width: \"50%\",\r\n            marginTop: 10,\r\n            alignSelf: \"center\",\r\n          }}\r\n        />\r\n        <View style={{ padding: 10 }}>\r\n          <Text style={styles.subheading}>Insights</Text>\r\n          <Insight\r\n            insight=\"Happiness\"\r\n            icon=\"smile-beam\"\r\n            text=\"This month you were on average happier than last month.\"\r\n          />\r\n          <Insight\r\n            insight=\"Anger\"\r\n            icon=\"sad-tear\"\r\n            text=\"We've noticd that there is usally anger detected Saturday nights.\"\r\n          />\r\n        </View>\r\n      </ScrollView>\r\n      <View>\r\n        <Footer />\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"space-between\",\r\n    backgroundColor: colors.background,\r\n  },\r\n  insight: {\r\n    margin: 10,\r\n    backgroundColor: colors.secondary,\r\n    borderRadius: 10,\r\n    padding: 10,\r\n  },\r\n  subheading: {\r\n    color: colors.primary,\r\n    fontWeight: \"bold\",\r\n    fontSize: 25,\r\n  },\r\n});\r\n\r\nexport default CalendarScreen;\r\n"]},"metadata":{},"sourceType":"module"}