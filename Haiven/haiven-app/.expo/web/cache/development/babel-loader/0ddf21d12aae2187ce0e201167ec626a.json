{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\jhuan\\\\Documents\\\\AI4Good\\\\Project\\\\hAIven\\\\haiven-app\\\\app\\\\screens\\\\JournalScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport colors from \"../config/colors\";\nimport { Footer } from \"../components/Footer\";\nimport { Ionicons } from \"@expo/vector-icons\";\nexport var Journal = function (_React$Component) {\n  _inherits(Journal, _React$Component);\n\n  var _super = _createSuper(Journal);\n\n  function Journal() {\n    _classCallCheck(this, Journal);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Journal, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.subheading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }\n      }, \"Journal\"), React.createElement(TextInput, {\n        style: styles.entry,\n        multiline: true,\n        placeholder: \"How was your day?\",\n        placeholderTextColor: \"#000\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }\n      }), React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Journal;\n}(React.Component);\nexport var Mood = function (_React$Component2) {\n  _inherits(Mood, _React$Component2);\n\n  var _super2 = _createSuper(Mood);\n\n  function Mood() {\n    _classCallCheck(this, Mood);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(Mood, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: {\n          alignItems: \"center\",\n          marginRight: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.subheading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }\n      }, this.props.subheading), React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: [styles.circle, {\n          backgroundColor: this.props.bgcolor\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        style: {\n          backgroundColor: colors.grey,\n          borderRadius: 10,\n          padding: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      }, this.props.mood)), React.createElement(View, {\n        style: {\n          fontStyle: \"italic\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }\n      }, this.props.time), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      }, this.props.length)));\n    }\n  }]);\n\n  return Mood;\n}(React.Component);\n\nfunction JournalScreen(_ref) {\n  var route = _ref.route;\n  var date = route.params.date;\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      selectedValue = _React$useState2[0],\n      setSelectedValue = _React$useState2[1];\n\n  var moodColor = !selectedValue ? colors.grey : colors[selectedValue];\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.dateHeading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, date)), React.createElement(View, {\n    style: [styles.container, styles.layout],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, React.createElement(Mood, {\n    subheading: \"My Mood\",\n    bgcolor: moodColor,\n    mood: selectedValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, React.createElement(Picker, {\n    selectedValue: selectedValue,\n    onValueChange: function onValueChange(itemValue) {\n      return setSelectedValue(itemValue);\n    },\n    prompt: \"Mood?\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"sad\",\n    value: \"sad\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"happy\",\n    value: \"happy\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"angry\",\n    value: \"angry\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  })))), React.createElement(Mood, {\n    subheading: \"Audio (1)\",\n    bgcolor: colors.angry,\n    mood: \"Angry\",\n    time: \"9:48PM\",\n    length: \"3 minutes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, React.createElement(Ionicons, {\n    style: styles.notification,\n    name: \"ios-chatbubbles\",\n    size: 40,\n    color: \"#8FBC8F\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }), React.createElement(Journal, {\n    style: {\n      alignSelf: \"stretch\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  })), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    flex: 1,\n    justifyContent: \"space-between\",\n    backgroundColor: colors.background\n  },\n  mood: {\n    flexDirection: \"row\"\n  },\n  notification: {\n    position: \"absolute\",\n    alignSelf: \"flex-end\",\n    padding: 10,\n    zIndex: 1\n  },\n  dateHeading: {\n    backgroundColor: colors.primary,\n    borderRadius: 10,\n    color: \"#fff\",\n    fontWeight: \"bold\",\n    padding: 10,\n    margin: 15\n  },\n  entry: {\n    backgroundColor: colors.secondary,\n    minHeight: Dimensions.get(\"window\").height * 0.3,\n    borderRadius: 10,\n    padding: 10\n  },\n  subheading: {\n    color: colors.primary,\n    fontWeight: \"bold\",\n    margin: 10\n  },\n  layout: {\n    flexWrap: \"wrap\",\n    flexDirection: \"row\",\n    alignItems: \"baseline\",\n    alignSelf: \"flex-start\"\n  },\n  circle: {\n    borderRadius: Math.round(Dimensions.get(\"window\").width + Dimensions.get(\"window\").height) / 2,\n    width: Dimensions.get(\"window\").width * 0.08,\n    height: Dimensions.get(\"window\").width * 0.08,\n    margin: 5\n  }\n});\nexport default JournalScreen;","map":{"version":3,"sources":["C:/Users/jhuan/Documents/AI4Good/Project/hAIven/haiven-app/app/screens/JournalScreen.js"],"names":["React","colors","Footer","Ionicons","Journal","styles","subheading","entry","Component","Mood","alignItems","marginRight","props","flexDirection","circle","backgroundColor","bgcolor","grey","borderRadius","padding","mood","fontStyle","time","length","JournalScreen","route","date","params","useState","selectedValue","setSelectedValue","moodColor","container","dateHeading","layout","itemValue","angry","notification","alignSelf","StyleSheet","create","flex","justifyContent","background","position","zIndex","primary","color","fontWeight","margin","secondary","minHeight","Dimensions","get","height","flexWrap","Math","round","width"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  TextInput,\r\n  Text,\r\n  Dimensions,\r\n  Picker,\r\n  Button,\r\n} from \"react-native\";\r\nimport colors from \"../config/colors\";\r\nimport { Footer } from \"../components/Footer\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\n\r\nexport class Journal extends React.Component {\r\n  render() {\r\n    return (\r\n      <View>\r\n        <Text style={styles.subheading}>Journal</Text>\r\n        <TextInput\r\n          style={styles.entry}\r\n          multiline\r\n          placeholder=\"How was your day?\"\r\n          placeholderTextColor=\"#000\"\r\n          // Implement this when we have a database connected.\r\n          // When text is changed we can save to database.\r\n          // onChangeText={(text) => someFunction(text)}\r\n        />\r\n        <Button />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport class Mood extends React.Component {\r\n  render() {\r\n    return (\r\n      <View style={{ alignItems: \"center\", marginRight: 50 }}>\r\n        <Text style={styles.subheading}>{this.props.subheading}</Text>\r\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n          <View\r\n            style={[styles.circle, { backgroundColor: this.props.bgcolor }]}\r\n          ></View>\r\n\r\n          <Text\r\n            style={{\r\n              backgroundColor: colors.grey,\r\n              borderRadius: 10,\r\n              padding: 5,\r\n            }}\r\n          >\r\n            {this.props.mood}\r\n          </Text>\r\n        </View>\r\n        <View style={{ fontStyle: \"italic\" }}>\r\n          <Text>{this.props.time}</Text>\r\n          <Text>{this.props.length}</Text>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nfunction JournalScreen({ route }) {\r\n  const { date } = route.params;\r\n  const [selectedValue, setSelectedValue] = React.useState(\"\");\r\n  const moodColor = !selectedValue ? colors.grey : colors[selectedValue];\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* <View>\r\n        <View style={{ flexDirection: \"row\", justifyContent: \"space-around\" }}>\r\n          <FontAwesome name=\"chevron-left\" size={24} color={colors.primary} />\r\n          <FontAwesome name=\"chevron-right\" size={24} color={colors.primary} />\r\n        </View>\r\n      </View> */}\r\n      <View>\r\n        <Text style={styles.dateHeading}>{date}</Text>\r\n      </View>\r\n      <View style={[styles.container, styles.layout]}>\r\n        <View>\r\n          <Mood subheading=\"My Mood\" bgcolor={moodColor} mood={selectedValue} />\r\n          <View>\r\n            <Picker\r\n              selectedValue={selectedValue}\r\n              onValueChange={(itemValue) => setSelectedValue(itemValue)}\r\n              prompt=\"Mood?\"\r\n            >\r\n              <Picker.Item label=\"sad\" value=\"sad\" />\r\n              <Picker.Item label=\"happy\" value=\"happy\" />\r\n              <Picker.Item label=\"angry\" value=\"angry\" />\r\n            </Picker>\r\n          </View>\r\n        </View>\r\n        <Mood\r\n          subheading=\"Audio (1)\"\r\n          bgcolor={colors.angry}\r\n          mood=\"Angry\"\r\n          time=\"9:48PM\"\r\n          length=\"3 minutes\"\r\n        />\r\n      </View>\r\n      <View>\r\n        <Ionicons\r\n          style={styles.notification}\r\n          name=\"ios-chatbubbles\"\r\n          size={40}\r\n          color=\"#8FBC8F\"\r\n        />\r\n        <Journal style={{ alignSelf: \"stretch\" }} />\r\n      </View>\r\n      <Footer />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: 20,\r\n    flex: 1,\r\n    justifyContent: \"space-between\",\r\n    backgroundColor: colors.background,\r\n  },\r\n  mood: {\r\n    flexDirection: \"row\",\r\n  },\r\n  notification: {\r\n    position: \"absolute\",\r\n    alignSelf: \"flex-end\",\r\n    padding: 10,\r\n    zIndex: 1,\r\n  },\r\n  dateHeading: {\r\n    backgroundColor: colors.primary,\r\n    borderRadius: 10,\r\n    color: \"#fff\",\r\n    fontWeight: \"bold\",\r\n    padding: 10,\r\n    margin: 15,\r\n  },\r\n  entry: {\r\n    backgroundColor: colors.secondary,\r\n    minHeight: Dimensions.get(\"window\").height * 0.3,\r\n    borderRadius: 10,\r\n    padding: 10,\r\n  },\r\n  subheading: {\r\n    color: colors.primary,\r\n    fontWeight: \"bold\",\r\n    margin: 10,\r\n  },\r\n  layout: {\r\n    flexWrap: \"wrap\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"baseline\",\r\n    alignSelf: \"flex-start\",\r\n  },\r\n  circle: {\r\n    borderRadius:\r\n      Math.round(\r\n        Dimensions.get(\"window\").width + Dimensions.get(\"window\").height\r\n      ) / 2,\r\n    width: Dimensions.get(\"window\").width * 0.08,\r\n    height: Dimensions.get(\"window\").width * 0.08,\r\n    margin: 5,\r\n  },\r\n});\r\n\r\nexport default JournalScreen;\r\n"]},"metadata":{},"sourceType":"module"}